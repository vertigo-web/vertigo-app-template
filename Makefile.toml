[env]
PROFILE="dev"

[env.profiling]
PROFILE="profiling"

[env.release]
PROFILE="release"

[tasks.watch]
command = "cargo"
args = [ "watch", "--watch", "./src", "--delay", "0.5", "-x", "make start --profile ${PROFILE}" ]

[tasks.clean-build]
script = "rm -Rf ./build"

[tasks.clean]
dependencies = [ "clean-build" ]

[tasks.build-app]
dependencies = [
    "clean-build",
]
install_script = '''
    if [ "$(rustup target list | grep wasm32-unknown-unknown | grep installed)" = "" ];
    then
        rustup target add wasm32-unknown-unknown;
    fi
'''
script = [
    "cargo build -p ${CARGO_MAKE_PROJECT_NAME} --release --target wasm32-unknown-unknown",
    "mkdir -p ./build",
    "cp ${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/wasm32-unknown-unknown/release/wasm_run.js ./build/wasm_run.js",
    "wasm-opt -Os --strip-debug -o ./build/${CARGO_MAKE_CRATE_FS_NAME}.wasm ${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/wasm32-unknown-unknown/release/${CARGO_MAKE_CRATE_FS_NAME}.wasm",
    "cp ./src/index.html ./build",
    "rm -Rf ./build/${CARGO_MAKE_CRATE_FS_NAME}_pre",
    "du -sh ./build",
]

[tasks.serve]
install_crate = { crate_name = "basic-http-server", binary = "basic-http-server", test_arg = ["--version"] }
command = "basic-http-server"
args = [ "--addr", "127.0.0.1:3000", "./build" ]

[tasks.start]
dependencies = [
    "clean-build",
    "build-app",
    "serve"
]
